version: '3.1'

services:

# REQUIRED - PostgresQL Database for Configuration Storage, Optional Entity Storage (enable via env)
  pg:
    image: postgres
    restart: always
    environment:
      TZ: ${TIMEZONE}
      POSTGRES_USER: ${PG_SU_UNAME}
      POSTGRES_PASSWORD: ${PG_SU_PASS}
      POSTGRES_DB: ${PG_DB}
    ports:
      - ${PG_PORT}:5432
  
# REQUIRED - MessageBus for SignalR & Hangfire BackgroundJob Scheduler
  redis:
    image: bitnami/redis:6.2.7
    environment:
      TZ: ${TIMEZONE}
      ALLOW_EMPTY_PASSWORD: 'yes'
      REDIS_AOF_ENABLED: 'no'
    ports:
      - ${REDIS_PORT}:6379
      
# OPTIONAL - Entity Storage
  elastic:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0-alpha2
      ports:
        - 9200:9200
        - 9300:9300
      environment:
        ELASTIC_USERNAME: ${ELASTIC_USER}
        ELASTIC_PASSWORD: ${ELASTIC_PASS}
        xpack.security.enabled: 'true'
        bootstrap.memory_lock: 'true'
        discovery.type: 'single-node'
        ES_JAVA_OPTS: '-Xms2048m -Xmx2048m'
      ulimits:
        memlock:
          soft: -1
          hard: -1
  
  # OPTIONAL - Elastic GUI
  kibana:
      image: docker.elastic.co/kibana/kibana:8.0.0-alpha2
      depends_on:
        - elastic
      ports:
        - 5601:5601
      environment:
        SERVER_NAME: 'kibana.webingest.local'
        ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
        ELASTICSEARCH_USERNAME: ${ELASTIC_USER}
        ELASTICSEARCH_PASSWORD: ${ELASTIC_PASS}
  
  # OPTIONAL - PostgresQL GUI
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - pg
    environment:
      TZ: ${TIMEZONE}
      PGADMIN_DEFAULT_EMAIL: ${PG_SU_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_SU_PASS}
    ports:
      - ${PGADMIN_PORT}:80

  # OPTIONAL - Automatic PostgresQL GraphQL Endpoint
#  postgraphile:
#    image: graphile/postgraphile
#    depends_on:
#      - pg
#    environment:
#      TZ: ${TIMEZONE}
#    ports:
#      - ${POSTGRAPHILE_PORT}:5000
#    command: --connection postgres://${PG_SU_UNAME}:${PG_SU_PASS}@pg:5432/${PG_DB} --schema ${DATA_SCHEMA_NAME} --watch --enhance-graphiql --dynamic-json

  # OPTIONAL - Rotating Tor/HAProxy HTTP Proxy
  rotatingproxy:
    image: mattes/rotating-proxy
    ports:
      - 4444:4444
      - 5566:5566
    environment:
      tors: 50
      
  # OPTIONAL - PostgresQL GraphQL / API Builder
  #hasura:
  #  image: hasura/graphql-engine:latest
  #  depends_on:
  #    - pg
  #  ports:
  #    - ${HASURA_PORT}:8080
  #  environment:
  #    HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
  #    HASURA_GRAPHQL_DATABASE_URL: 'postgres://${PG_SU_UNAME}:${PG_SU_PASS}@pg:5432/${PG_DB}'

  # OPTIONAL - Business Intelligence / Analytics Platform
  #  superset:
  #    image: apache/superset
  #    depends_on:
  #      - pg
  #    ports:
  #      - ${SUPERSET_PORT}:8088
  #    command: superset superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin
    
# OPTIONAL - Business Intelligence / Analytics Platform
  #  metabase:
  #    image: metabase/metabase
  #    depends_on:
  #      - pg
  #    ports:
  #      - ${METABASE_PORT}:3000